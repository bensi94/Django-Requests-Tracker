[tool.poetry]
name = "requests-tracker"
version = "0.3.3"
description = "The Django Requests Tracker is designed for local Django development, particularly for Rest API development. It provides various debugging information, such as SQL queries, headers, and status codes."
license = "MIT"
authors = ["Benedikt Ã“skarsson <bensi94@hotmail.com>"]
readme = "README.md"
repository = "https://github.com/bensi94/Django-Requests-Tracker"
documentation = "https://github.com/bensi94/Django-Requests-Tracker/blob/main/README.md"
keywords = ["django", "python", "sql", "middlware", "api", "rest", "debug", "htmx", "django-rest-framework", "django-ninja", "requests-tracker", "django-requests-tracker", "development"]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Environment :: Web Environment",
    "Framework :: Django",
    "License :: OSI Approved :: MIT License",
]
packages = [
    { include = "requests_tracker" },
]


[tool.poetry.dependencies]
python = ">=3.8,<4.0"
django = ">=3.2"
sqlparse = ">=0.4.3"


[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
pytest-sugar = "^1.0.0"
psycopg2 = "^2.9.9"
mypy = "^1.6.1"
pre-commit = "^3.5.0"
django-stubs = {extras = ["compatible-mypy"], version = "^4.2.7"}
types-psycopg2 = "^2.9.21.20240417"
pytest-env = "^1.1.3"
pytest-cov = "^5.0.0"
ruff = "^0.4.0"
pytest-django = "^4.8.0"
djhtml = "^3.0.6"
freezegun = "^1.4.0"
types-freezegun = "^1.1.10"
pytest-asyncio = "^0.23.6"
psycopg2-binary = "^2.9.9"
coverage = "^7.4.4"


[tool.pytest.ini_options]
env = [
    "DJANGO_SETTINGS_MODULE = tests.django_settings"
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]



[tool.coverage.run]
omit = ["tests/*", "example_project/*"]

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING:", "except ImportError:"]

[tool.mypy]
plugins = "mypy_django_plugin.main"
exclude = "example_project"


[tool.django-stubs]
django_settings_module = "requests_tracker.settings"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
