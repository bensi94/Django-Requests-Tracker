name: Test & Code Quality

on:
  push:
    branches: [ "main" ]
  pull_request:
    types: ["opened", "synchronize"]

permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
        poetry-version: ["1.2.2"]

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Run image
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: ${{ matrix.poetry-version }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: poetry install

    - name: Lint with ruff
      run: poetry run ruff .

    - name: Check with black
      run: poetry run black . --check

    - name: Check with mypy
      run: poetry run mypy . --strict --enable-recursive-aliases

    - name: Test with pytest
      run: |
        poetry run pytest . --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=./ | tee pytest-coverage.txt

    - name: Pytest coverage comment
      if: github.event_name == 'pull_request'
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-coverage-path: ./pytest-coverage.txt
        junitxml-path: ./pytest.xml
